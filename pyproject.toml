[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "strawberry-django-auth"
version = "0.376.5"
description = "Graphql authentication system with Strawberry for Django."
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [{ name = "Nir.J Benlulu", email = "nrbnlulu@gmail.com" }]
maintainers = [{ name = "Nir.J Benlulu", email = "nrbnlulu@gmail.com" }]
classifiers = [
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Framework :: Django",
  "Framework :: Django :: 3.2",
  "Framework :: Django :: 4.1",
  "Framework :: Django :: 4.2",
  "Framework :: Django :: 5.0",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "Django >=3.2,<6.0",
  "PyJWT >=2.6.0,<3.0",
  "pillow >=9.5,<11.0",
  "strawberry-graphql-django >=0.10.5",
]

[project.urls]
Documentation = "https://nrbnlulu.github.io/strawberry-django-auth/"
Issues = "https://github.com/nrbnlulu/strawberry-django-auth/issues"
Source = "https://github.com/nrbnlulu/strawberry-django-auth"

[project.optional-dependencies]
captcha = ["pillow"]

[project.scripts]
# Define any entry points

[tool.hatch.build.targets.wheel]
packages = ["gqlauth"]

[tool.hatch.envs.default]
dependencies = [
  "pre-commit ~=3.3.3",
  "setuptools >=67.6.0",
  "channels[daphne] >=4.0.0",
  "captcha >=0.3.0",
]

# Testing

[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]
django = ["3.2.25", "4.1.13", "4.2.11", "5.0.3"]

[[tool.hatch.envs.test.matrix]]
python = ["3.10", "3.11", "3.12"]
django = ["5.0.3"]

[tool.hatch.envs.test]
extra-dependencies = [
  "Django=={matrix:django}",
  "coverage[toml]>=6.5",
  "pytest",
  "pytest-cov >=4,<6",
  "django-mock-queries ~=2.1.7",
  "Faker >=18.2.0",
  "pytest-asyncio >=0.21.0",
  "pytest-django ~=4.5.2",
]

[tool.hatch.envs.test.scripts]
test = "pytest --ds=testproject.settings -m 'not settings_b' --cov=gqlauth --cov-report=xml"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = ["- coverage combine", "coverage report"]
cov = ["test-cov", "cov-report"]
serve = "./testproject/manage.py runserver"

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
  "django-stubs[compatible-mypy] ==4.2.0",
  "types-cryptography ~=3.3.23",
  "types-mock ~=5.0.0",
  "types-jwt ~=0.1.0",
  "types-pkg-resources ~=0.1.0",
]

# Type Checking

[tool.hatch.envs.types.scripts]
# TODO: Check tests as well
#check = "mypy --install-types --non-interactive {args:gqlauth tests}"
check = "mypy --install-types --non-interactive {args:gqlauth}"

# Documentation

[tool.hatch.envs.docs]
dependencies = [
  "mkdocs >=1.3.0",
  "mkdocs-markdownextradata-plugin >=0.2.5",
  "mkdocs-material >=8.5.4",
  "mkdocs-minify-plugin >=0.5.0",
  "pymdown-extensions >=9.9",
  "Markdown >=3.4.1",
  # TODO:
  # WARNING: pydoc-markdown 4.8.2 does not provide the extra 'novella'
  "pydoc-markdown[novella] >=4.6.4",
]

[tool.hatch.envs.docs.scripts]
build = [
  "python docs/pre_build.py",
  "mkdocs build",
]
serve = "mkdocs serve"
deploy = "mkdocs gh-deploy --force"

[tool.pytest.ini_options]
django_find_project = false
minversion = "6.0"
addopts = "-ra -q"
testpaths = ["tests"]
DJANGO_SETTINGS_MODULE = "testproject.settings"
python_files = "tests.py test_*.py *_tests.py"
asyncio_mode = "auto"
markers = [
  "default_user: uses the default settings, a user with email address and default USERNAME_FIELD",
  "settings_b: uses a custom user model, not captcha validation as well as some other non-default settings",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310']
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | __pycached__
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
force_sort_within_sections = true

[tool.mypy]
plugins = ["mypy_django_plugin.main", "strawberry.ext.mypy_plugin"]
ignore_missing_imports = true

[tool.django-stubs]
django_settings_module = "testproject.settings"

[tool.autopub]
git-username = "gqlauth-bot"
git-email = "bot@no.reply"
project-name = "gqlauth"
append-github-contributor = true

[tool.ruff]
line-length = 100
#fix = true
src = ["gqlauth", "tests", "testproject"]

[tool.ruff.lint]
select = ["E", "F", "ERA", "I"]
ignore = [
  "TID252",
  "E501",   # line too long, handled by black
]
